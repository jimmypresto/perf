# Make sure your docker instance is run with these options, either docker run or docker-compose
#   docker run -it --cap-add=ALL --security-opt seccomp=unconfined --privileged -v ~/hostlogs:/var/log/hostlogs <repo>:<tag> /bin/bash
# Alternatively, add these options in your docker yaml for docker-compose:
#   security_opt:
#     - seccomp:unconfined
#   privileged: true
#   cap_add:
#     - ALL
# Then docker-compose run like this:
#   docker-compose run -v ~/hostlogs:/var/log/hostlogs -p 8080:8080 -p 8082:8082 <service> bash

# Make sure you have extracted/installed matching kernel symbols and headers. Instructions:
#    https://github.com/jimmypresto/perf/blob/a031fb7819a08d5aed36e0e0bd13b89879072a81/bpftrace.txt#L6

# Search and force install a close-and-newer linux-tools package version
apt-cache search linux-tools | grep 'tools\-4.*generic'
apt install -y linux-tools-4.18.0-25-generic

# And symlink the installed linux tools version to the asking kernel version (`uname -r`)
ln -s /usr/lib/linux-tools/4.18.0-25-generic /usr/lib/linux-tools/4.9.184-linuxkit

# The docker container itself, a bit better to use it
#   https://github.com/linuxkit/linuxkit/blob/master/docs/kernel-perf.md
alias perf=/proc/1/root/usr/bin/perf

# Alternative way to force install perf; it might work too, less preferred 
# https://github.com/JanitorTechnology/dockerfiles/issues/188
#   apt-get update -q
#   apt-get install -qy linux-tools-generic
#   cd /usr/lib/linux-tools
#   cd `ls -1 | head -n1`
#   sudo rm -f /usr/bin/perf
#   sudo ln -s `pwd`/perf /usr/bin/perf

# Unlift docker restrictions on kernel perf event calls
# http://www.brendangregg.com/Slides/LISA2017_Container_Performance_Analysis.pdf
echo 0 > /proc/sys/kernel/perf_event_paranoid
echo 0 > /proc/sys/kernel/kptr_restrict

# Download and install libruby2.5.7 symbol package in docker instance
wget http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu/pool/main/r/ruby2.5/libruby2.5-dbgsym_2.5.7-1bbox3~bionic1_amd64.ddeb
dpkg -i /var/log/hostlogs/libruby2.5-dbgsym_2.5.7-1bbox3~bionic1_amd64.ddeb

# http://www.brendangregg.com/Slides/DockerCon2017_performance_analysis.pdf
# The 'perf record' command  samples at 99hz, all CPUs (-a), callstack/symbols (-g --call-graph) and for 60 seconds
# Remember to record within FlameGraph folder; the 'perf script' commands wants the generated perf.data file in same folder
git clone --depth 1 https://github.com/brendangregg/FlameGraph
cd FlameGraph
perf record –F 99 -a –g --call-graph dwarf -- sleep 60
perf script | ./stackcollapse-perf.pl | ./flamegraph.pl > perf.svg

# And many other kernel perf usages
http://www.brendangregg.com/perf.html

# https://wiki.ubuntu.com/Debug%20Symbol%20Packages
# bionic is derived form `lsb_release -cs`
# /etc/apt/sources.list.d/ddebs.list
deb http://ddebs.ubuntu.com bionic main restricted universe multiverse
deb http://ddebs.ubuntu.com bionic-updates main restricted universe multiverse
deb http://ddebs.ubuntu.com bionic-proposed main restricted universe multiverse

apt install ubuntu-dbgsym-keyring
apt-get update
