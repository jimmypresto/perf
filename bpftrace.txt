Visualizing Performance with Flame Graphs
http://www.brendangregg.com/Slides/USENIX_ATC2017_flamegraphs.pdf
https://youtu.be/D53T1Ejig1Q

git clone --depth 1 https://github.com/brendangregg/FlameGraph
git clone --depth 1 https://github.com/iovisor/bcc
./bcc/tools/profile.py -dF 99 30 | ./FlameGraph/flamegraph.pl > perf.svg

Shows	who	issued	disk	I/O	(sync	reads	&	writes):
perf record -e block:block_rq_insert -a -g -- sleep 60

# Copy matching linuxkit kernel header
#   https://github.com/falcosecurity/falco/issues/657
# Save following lines, change the kernel version string (4.9.184) to yours, in a dockerfile (linuxkit-bionic.dockfile)
#   FROM linuxkit/kernel:4.9.184 AS ksrc
#   FROM ubuntu:bionic
#   COPY --from=ksrc /kernel-dev.tar /
#   COPY --from=ksrc /kernel.tar /
#   CMD ["/bin/bash"] 
# Docker build/run and copy tar files out to your host 
# (later we will extract them on your build machien)
#   docker build -f linuxkit-bionic.dockfile -t linuxkit-kernel-headers:4.9.184 .

# Docker run your bpftrace build machine (ubnutu:bionic)
# Tips: First apt install packages listed in bpftrace, jump to bcc's and follow make/install, then circle back and finish bpftrace's 
# Build and install bcc from source, follow https://github.com/iovisor/bcc/blob/master/INSTALL.md#install-and-compile-bcc-3
# Build and install bpftrace from source, follow https://github.com/iovisor/bpftrace/blob/master/INSTALL.md#building-bpftrace-1

# /sys/kernel/debug/tracing/available_events: No such file or directory"
mount -t debugfs none /sys/kernel/debug/
