$ sudo sh -c "echo 'deb http://ddebs.ubuntu.com $(lsb_release -cs) main restricted universe multiverse' >> /etc/apt/sources.list.d/ddebs.list"
$ sudo sh -c "echo 'deb http://ddebs.ubuntu.com $(lsb_release -cs)-updates main restricted universe multiverse' >> /etc/apt/sources.list.d/ddebs.list"
$ sudo sh -c "echo 'deb http://ddebs.ubuntu.com $(lsb_release -cs)-proposed main restricted universe multiverse' >> /etc/apt/sources.list.d/ddebs.list"
$ wget -O - http://ddebs.ubuntu.com/dbgsym-release-key.asc | sudo apt-key add -
$ sudo apt-get update

$ sudo apt install linux-image-`uname -r`-dbgsym linux-tools-`uname -r` linux-tools-generic linux-tools-common
$ sudo apt install clang bcc bpfcc-tools
$ sudo snap install bpftrace

# Building/installing bcc/bpftrace
#      bcc: https://github.com/iovisor/bcc/blob/master/INSTALL.md#install-and-compile-bcc-3
# bpftrace: https://github.com/iovisor/bpftrace/blob/master/INSTALL.md#building-bpftrace-1

# kernel perf general usage & setup
# https://www.usenix.org/sites/default/files/conference/protected-files/srecon18americas_slides_goldshtein.pdf
#   java -XX:+PreserveFramePointer

# http://www.brendangregg.com/Slides/LISA2017_Container_Performance_Analysis.pdf
$ sudo sh -c 'echo 0 > /proc/sys/kernel/perf_event_paranoid'
$ sudo sh -c 'echo 0 > /proc/sys/kernel/kptr_restrict'
$ sudo sysctl -w kernel.perf_event_max_stack=512

# Test this bpftrace/perf commands; make sure no errors on bpftrace.
#     sudo bpftrace -e 'tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }'
#     sudo perf test

# http://www.brendangregg.com/Slides/DockerCon2017_performance_analysis.pdf
#   The 'perf record' command  samples at 99hz, all CPUs (-a), callstack/symbols (-g --call-graph) and for 60 seconds
#   Record IN the FlameGraph folder; the 'perf script' commands wants the perf.data file generated in same folder
# http://www.brendangregg.com/perf.html
#   Many other kernel perf usages

# perf-map-agent
# Build and create /tmp/perf-<pid>.map for the perf script command
# bin/create-java-perf-map.sh $(pidof java)

$ git clone --depth 1 https://github.com/brendangregg/FlameGraph
$ cd FlameGraph
$ perf record –F 99 -a –g -- sleep 60
$ perf script | ./stackcollapse-perf.pl --pid --all | ./flamegraph.pl --colors java > perf.svg

# Remaining issues
# Failed to open /usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa, continuing without symbols
