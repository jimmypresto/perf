docker run -it --security-opt seccomp=unconfined -v ~/hostlogs:/var/log/hostlogs -v /sys/kernel/debug:/sys/kernel/debug -v /sys/fs/cgroup:/sys/fs/cgroup -v /sys/fs/bpf:/sys/fs/bpf --privileged <repo>:<tag> /bin/bash
docker run --rm -it --security-opt seccomp=unconfined <repo>:<tag> /bin/bash
docker run --rm -it <repo>:<tag> /bin/bash
docker run --rm -it --cpus=".5" --cpuset-cpus=1 -p 8080:8080 <repo>:<tag>
docker run -v ~/hostlogs:/var/log/hostlogs --env-file ./a.env -p 1234:1234 -p 8080:8080 -p 3000:3000 <repo>:<tag>

# Once a container exited, not being removed, restart with the exited container id
docker start -a <container_id>

docker-compose run --rm --service-ports <service>
docker-compose run -v ~/hostlogs:/var/log/hostlogs --service-ports <service>
docker-compose run --service-ports <service> rdebug-ide --host "0.0.0.0" --port "1234" --dispatcher-port "3389" -- bin/rails s -b "0.0.0.0" -p "8080"
# This allows you to get to a bash, start rails app repeatedly without exiting container
#   bin/rails s -b 0.0.0.0 -p 8080
docker-compose run -v ~/hostlogs:/var/log/hostlogs -p 1234:1234 -p 8080:8080 -p 3000:3000 <service> bash
